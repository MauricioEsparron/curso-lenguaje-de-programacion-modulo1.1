package mantenimiento;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import entidad.Usuario;
import interfaces.UsuarioInterfacesDAO;
import utils.MySQLConexion8;

public class GestionUsuarioDAO implements UsuarioInterfacesDAO {

	public int registrar(Usuario u) {
		// Declaración de variables
		int res = 0;
		Connection con = null;
		PreparedStatement pstm = null;
		try {

			// paso 1: Establecer la conexión a la BD

			con = MySQLConexion8.getConexion();

			// paso 2: determinar la instrucción SQL --> Registrar

			// insert into tb_usuarios values
			// (null,'Sandra','Perez','U005','12345','2022-10-21',default,default);

			String sql = "insert into tb_usuarios values (null,?,?,?,?,?,default,default)";

			// paso 3: crear el objeto pstm y enviar la variable SQL

			pstm = con.prepareStatement(sql);

			// paso 4: parametros

			pstm.setString(1, u.getNombre());
			pstm.setString(2, u.getApellido());
			pstm.setString(3, u.getUsuario());
			pstm.setString(4, u.getClave());
			pstm.setString(5, u.getFNacim());

			// paso 5: ejecutar la instrucción

			res = pstm.executeUpdate();

		} catch (Exception e) {
			System.out.println(">>>>>>>>>>>>>>>>> Error en la intrucción SQL - Registrar " + e.getMessage());
		} finally {
			try {
				if (pstm != null)
					pstm.close();
				if (con != null)
					pstm.close();

			} catch (Exception e2) {

				System.out.println(">>>>>>>>>>>>>> Error al cerrar la base de datos " + e2.getMessage());

			}
		}

		return res;
	}

	public int actualizar(Usuario u) {

		int res = 0;
		Connection con = null;
		PreparedStatement pstm = null;
		try {

			// paso 1: Establecer la conexión a la BD

			con = MySQLConexion8.getConexion();

			// paso 2: determinar la instrucción SQL --> Actualizar

			// update tb_usuarios set nombre ='Javier',apellido = 'Escalera',usuario =
			// 'U018', clave = '23456', fnacim = '2022-05-03' where codigo = 15;

			// 'set lastname = 'Fernandez', username = 'U003',password = '12345',fnacim =
			// '2022-05-0'

			String sql = "update tb_usuarios set nombre = ?,set apellido = ?, usuario = ?,clave = ?,fnacim = ? where codigo = ?";

			// paso 3: crear el objeto pstm y enviar la variable SQL

			pstm = con.prepareStatement(sql);

			// paso 4: parametros

			pstm.setString(1, u.getNombre());
			pstm.setString(2, u.getApellido());
			pstm.setString(3, u.getUsuario());
			pstm.setString(4, u.getClave());
			pstm.setString(5, u.getFNacim());
			pstm.setInt(6, u.getCodigo());

			// paso 5: ejecutar la instrucción

			res = pstm.executeUpdate();
			System.out.println("ok");

		} catch (Exception e) {
			System.out.println(">>>>>>>>>>>>>>>>> Error en la intrucción SQL - Registrar " + e.getMessage());
		} finally {
			try {
				if (pstm != null)
					pstm.close();
				if (con != null)
					pstm.close();

			} catch (Exception e2) {

				System.out.println(">>>>>>>>>>>>>> Error al cerrar la base de datos " + e2.getMessage());

			}
		}

		return res;
	}

	public int eliminar(int codigo) {
		int res = 0;
		Connection con = null;
		PreparedStatement pstm = null;
		try {

			// paso 1: Establecer la conexión a la BD

			con = MySQLConexion8.getConexion();

			// paso 2: determinar la instrucción SQL --> Actualizar

			// update tb_usuarios set nombre ='Javier',apellido = 'Escalera',usuario =
			// 'U018', clave = '23456', fnacim = '2022-05-03' where codigo = 15;

			// 'set lastname = 'Fernandez', username = 'U003',password = '12345',fnacim =
			// '2022-05-0'

			String sql = "delete from tb_usuarios where codigo = ?";

			// paso 3: envair instrucción al objeto pstm --> obtener comando SQL

			pstm = con.prepareStatement(sql);

			// paso 4: parametros

			pstm.setInt(1, codigo);

			// paso 5: ejecutar la instrucción

			res = pstm.executeUpdate();

		} catch (Exception e) {
			System.out.println(">>>>>>>>>>>>>>>>> Error en la intrucción SQL - Registrar " + e.getMessage());
		} finally {
			try {
				if (pstm != null)
					pstm.close();
				if (con != null)
					pstm.close();

			} catch (Exception e2) {

				System.out.println(">>>>>>>>>>>>>> Error al cerrar la base de datos " + e2.getMessage());

			}
		}

		return res;
	}

	@Override
	public ArrayList<Usuario> listarUsuarios() {
		ArrayList<Usuario> lista = new ArrayList<Usuario>();// null
		Usuario user;
		PreparedStatement pstm = null;
		Connection con = null;
		ResultSet res = null;
		return null;
		try {

			// paso 1: Establecer la conexión a la BD

			con = MySQLConexion8.getConexion();

			// paso 2: determinar la instrucción SQL --> Consultar

			String sql = "";

		} catch (Exception e) {
			System.out.println(">>>>>>>>>>>>>>>>> Error en la intrucción SQL - Registrar " + e.getMessage());
		} finally {
			try {
				if (pstm != null)
					pstm.close();
				if (res != null)
					res.close();
				if (con != null)
					pstm.close();

			} catch (Exception e2) {

				System.out.println(">>>>>>>>>>>>>> Error al cerrar la base de datos " + e2.getMessage());

			}
		}

		return lista;
	}
}
