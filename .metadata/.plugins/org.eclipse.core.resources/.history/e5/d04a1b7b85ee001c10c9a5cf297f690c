package vista;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import entidad.TipoUsuarios;
import entidad.Usuario;
import mantenimiento.GestionTipoUsuarioDAO;
import mantenimiento.GestionUsuarioDAO;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTable;

public class Reporte2 extends JFrame {

	private JPanel contentPane;
	private JComboBox cboTipo;
	GestionTipoUsuarioDAO gTipUser = new GestionTipoUsuarioDAO();
	GestionUsuarioDAO gUser = new GestionUsuarioDAO();
	private JTable tbUsuarios;
	DefaultTableModel model = new DefaultTableModel();

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Reporte2 frame = new Reporte2();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Reporte2() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 307);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		JLabel lblListadoDeUsuarios = new JLabel("Listado de Usuarios");
		lblListadoDeUsuarios.setBounds(24, 11, 194, 26);
		contentPane.add(lblListadoDeUsuarios);

		JButton btnReporte = new JButton("Reporte");
		btnReporte.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				cargarReporte();
			}
		});
		btnReporte.setBounds(172, 236, 89, 23);
		contentPane.add(btnReporte);

		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 81, 414, 141);
		contentPane.add(scrollPane);
		
		tbUsuarios = new JTable();
		tbUsuarios.setFillsViewportHeight(true);
		scrollPane.setViewportView(tbUsuarios);

		JLabel lblTipo = new JLabel("Tipo:");
		lblTipo.setBounds(10, 44, 46, 14);
		contentPane.add(lblTipo);

		cboTipo = new JComboBox();
		cboTipo.setBounds(66, 41, 157, 20);
		contentPane.add(cboTipo);
		//columnas
		model.addColumn("Código");
		model.addColumn("Nombre");
		model.addColumn("Apellido");
		model.addColumn("Tipo");
		
		tbUsuarios.setModel(model);
		
		cargarDataComboBox();

		
	}
	//método para cargar data al comboBox desde la BD
		@SuppressWarnings("unchecked")
		private void cargarDataComboBox() {
			// 1. Obtener el resultado del proceso de consulta
			ArrayList<TipoUsuarios> listaTipUser = gTipUser.listaTipoUsuario();
			//2.validar el resultado del proceso
			if(listaTipUser.size() == 0) {
				mensajeError("Lista vacía");
			}else {
				cboTipo.addItem("Seleccione ...");
				for (TipoUsuarios tipoUsuarios : listaTipUser) {
					cboTipo.addItem(tipoUsuarios.getCod() + " - " + tipoUsuarios.getDescripcion());
				}
			}
		}
	private void mensajeError(String msj) {
			JOptionPane.showMessageDialog(this, msj,"Error!! ",0);
			
		}
	
	private void cargarReporte() {
		//limpiar la tabla
		model.setRowCount(0);
		//obtener el tipo de usuario ingresado
		int tipo = getTipo();
		//Validar
		if (tipo == 0) {
			return;
		}else {
			//obtener el resultado del proceso de consulta
			ArrayList<Usuario> listUser = gUser.listarUsuarioXTipo(tipo);
			//validar el resultado del proceso
			if(listUser.size() == 0) {
				mensajeError("Lista vacía");
			}else {
				//bucle
				for (Usuario u : listUser) {
					Object fila[] = {u.getCodigo(),
							         u.getNombre(),
							         u.getApellido(),
							         u.getTipo()
							         };
					model.addRow(fila);
				}
			}
		}
			
		
	}

	private int getTipo() {
		return cboTipo.getSelectedIndex();
	}

}
