!SESSION 2022-06-13 17:06:31.040 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=18.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\mauri\OneDrive\Documentos\CICLO 3\LENGUAJE DE PROGRAMACION I\RESUELTOS\proyecto\.metadata\.bak_1.log
Created Time: 2022-06-13 17:45:05.584

!ENTRY org.eclipse.jdt.ui 4 2 2022-06-13 17:45:05.586
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-06-13 17:45:05.588
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:05.635
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila.size );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:05.637
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:05.639
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:08.846
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila.size );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-06-13 17:45:08.849
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-06-13 17:45:08.852
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:09.405
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila.size );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:09.408
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:09.409
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:09.471
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila.size );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui 4 0 2022-06-13 17:45:09.478
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:11.323
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila.size );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:11.326
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:11.328
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:11.362
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila.size );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui 4 0 2022-06-13 17:45:11.365
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:13.863
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila.size );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:13.865
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:13.866
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:14.291
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila.size );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:14.293
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:14.294
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:14.345
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila.size );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:14.347
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:14.349
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:15.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila);
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-06-13 17:45:15.010
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-06-13 17:45:15.011
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:15.361
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila);
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-06-13 17:45:15.363
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-06-13 17:45:15.364
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:15.416
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila);
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:15.419
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:15.420
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:17.990
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-06-13 17:45:17.992
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-06-13 17:45:17.994
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:18.323
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-06-13 17:45:18.325
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-06-13 17:45:18.327
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:18.368
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:18.370
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:18.372
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:22.841
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-06-13 17:45:22.842
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-06-13 17:45:22.844
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:24.077
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:24.079
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:24.080
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:24.113
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui 4 0 2022-06-13 17:45:24.116
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:26.455
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:26.457
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:26.458
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:26.488
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui 4 0 2022-06-13 17:45:26.490
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:28.046
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:28.048
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:28.049
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:28.086
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-06-13 17:45:28.088
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-06-13 17:45:28.090
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-06-13 17:45:28.124
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package vista;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;

import entidad.Cliente;
import entidad.Tarjeta;
import entidad.TipoCuenta;
import mantenimiento.GestionClienteDAO;
import mantenimiento.GestionTarjetaDAO;
import mantenimiento.GestionTipoCuentaDAO;
import utils.Validaciones;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class FrmRegistroTarjeta extends JInternalFrame implements ActionListener, KeyListener, MouseListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblNumeroTarjeta;
	private JLabel lblCodigoCliente;
	private JLabel lblCodigoCuenta;
	private JLabel lblNumeroCuenta;
	private JLabel lblFechaAfiliacion;
	private JLabel lblFechaCaducidad;
	private JLabel lblSaldo;
	private JTextField txtNumeroTarjeta;
	private JTextField txtNumeroCuenta;
	private JTextField txtSaldo;
	private JDateChooser txtFechaCaducidad;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JScrollPane scrollPane;
	private JButton btnAyuda;
	private JButton btnAyuda_1;
	private JButton btnAyuda_2;
	private JButton btnAyuda_3;
	private JLabel lblNumTarjAyuda;
	private JLabel lblCodCliAyuda;
	private JLabel lblCodCuentAyuda;
	private JLabel lblNumCuentAyuda;
	private JComboBox cboCodigoCliente;
	private JButton btnAyuda_4;
	private JLabel lblSaldoAyuda;

	GestionTarjetaDAO gTarjeta = new GestionTarjetaDAO();
	GestionClienteDAO gCliente = new GestionClienteDAO();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();
	DefaultTableModel model = new DefaultTableModel();
	private JTable tblTarjeta;
	private JComboBox cboCodTipoCuenta;
	private JButton btnRefresh;
	private JButton btnEliminar;
	private JButton btnActualizar;
	private JDateChooser txtFechaAfiliacion;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmRegistroTarjeta frame = new FrmRegistroTarjeta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmRegistroTarjeta() {
		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 716, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro de Tarjeta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 30));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 700, 51);
		contentPane.add(lblNewLabel);

		lblNumeroTarjeta = new JLabel("Numero Tarjeta :");
		lblNumeroTarjeta.setBounds(10, 92, 96, 14);
		contentPane.add(lblNumeroTarjeta);

		lblCodigoCliente = new JLabel("cod cliente :");
		lblCodigoCliente.setBounds(10, 117, 96, 14);
		contentPane.add(lblCodigoCliente);

		lblCodigoCuenta = new JLabel("Cod Tipo cuenta :");
		lblCodigoCuenta.setBounds(10, 142, 107, 14);
		contentPane.add(lblCodigoCuenta);

		lblNumeroCuenta = new JLabel("Num cuenta :");
		lblNumeroCuenta.setBounds(10, 167, 96, 14);
		contentPane.add(lblNumeroCuenta);

		lblFechaAfiliacion = new JLabel("Fecha afiliación :");
		lblFechaAfiliacion.setBounds(10, 193, 96, 14);
		contentPane.add(lblFechaAfiliacion);

		lblFechaCaducidad = new JLabel("Fecha caducidad :");
		lblFechaCaducidad.setBounds(10, 218, 96, 14);
		contentPane.add(lblFechaCaducidad);

		lblSaldo = new JLabel("Saldo :");
		lblSaldo.setBounds(10, 243, 96, 14);
		contentPane.add(lblSaldo);

		txtNumeroTarjeta = new JTextField();
		txtNumeroTarjeta.addKeyListener(this);
		txtNumeroTarjeta.setBounds(127, 89, 147, 20);
		contentPane.add(txtNumeroTarjeta);
		txtNumeroTarjeta.setColumns(10);

		txtNumeroCuenta = new JTextField();
		txtNumeroCuenta.addKeyListener(this);
		txtNumeroCuenta.setText(" ");
		txtNumeroCuenta.setBounds(127, 164, 147, 20);
		contentPane.add(txtNumeroCuenta);
		txtNumeroCuenta.setColumns(10);

		txtSaldo = new JTextField();
		txtSaldo.addKeyListener(this);
		txtSaldo.setBounds(127, 243, 116, 20);
		contentPane.add(txtSaldo);
		txtSaldo.setColumns(10);

		txtFechaCaducidad = new JDateChooser();
		txtFechaCaducidad.setDateFormatString("yyyy-MM-dd");
		txtFechaCaducidad.setBounds(127, 218, 129, 20);
		contentPane.add(txtFechaCaducidad);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.setIcon(new ImageIcon(FrmRegistroTarjeta.class.getResource("/img/8201360_add_plus_new_ui_icon.png")));
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(440, 117, 104, 29);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.setIcon(new ImageIcon(
				FrmRegistroTarjeta.class.getResource("/img/7351060_bookmark_favorite_star_save_icon.png")));
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(554, 117, 107, 29);
		contentPane.add(btnGuardar);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 277, 700, 236);
		contentPane.add(scrollPane);

		tblTarjeta = new JTable();
		tblTarjeta.addKeyListener(this);
		tblTarjeta.addMouseListener(this);
		tblTarjeta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTarjeta);

		btnAyuda = new JButton("...");
		btnAyuda.addActionListener(this);
		btnAyuda.setBounds(284, 88, 21, 23);
		contentPane.add(btnAyuda);

		btnAyuda_1 = new JButton("...");
		btnAyuda_1.addActionListener(this);
		btnAyuda_1.setBounds(284, 113, 21, 23);
		contentPane.add(btnAyuda_1);

		btnAyuda_2 = new JButton("...");
		btnAyuda_2.addActionListener(this);
		btnAyuda_2.setBounds(284, 138, 21, 23);
		contentPane.add(btnAyuda_2);

		btnAyuda_3 = new JButton("...");
		btnAyuda_3.addActionListener(this);
		btnAyuda_3.setBounds(284, 167, 21, 23);
		contentPane.add(btnAyuda_3);

		lblNumTarjAyuda = new JLabel("(6 digitos)");
		lblNumTarjAyuda.setBounds(315, 96, 115, 14);
		lblNumTarjAyuda.setVisible(false);
		contentPane.add(lblNumTarjAyuda);

		lblCodCliAyuda = new JLabel("(seleccione)");
		lblCodCliAyuda.setBounds(315, 124, 115, 14);
		lblCodCliAyuda.setVisible(false);
		contentPane.add(lblCodCliAyuda);

		lblCodCuentAyuda = new JLabel("(seleccione)");
		lblCodCuentAyuda.setBounds(315, 146, 115, 14);
		lblCodCuentAyuda.setVisible(false);
		contentPane.add(lblCodCuentAyuda);

		lblNumCuentAyuda = new JLabel("(4 digitos)");
		lblNumCuentAyuda.setBounds(315, 171, 115, 14);
		lblNumCuentAyuda.setVisible(false);
		contentPane.add(lblNumCuentAyuda);

		cboCodigoCliente = new JComboBox();
		cboCodigoCliente.addMouseListener(this);
		cboCodigoCliente.setBounds(126, 113, 148, 22);
		contentPane.add(cboCodigoCliente);

		btnAyuda_4 = new JButton("...");
		btnAyuda_4.addActionListener(this);
		btnAyuda_4.setBounds(253, 243, 21, 23);
		contentPane.add(btnAyuda_4);

		lblSaldoAyuda = new JLabel("(solo números)");
		lblSaldoAyuda.setBounds(281, 246, 86, 14);
		lblSaldoAyuda.setVisible(false);
		contentPane.add(lblSaldoAyuda);

		model.addColumn("Num. Tarjeta");
		model.addColumn("cod. Cliente");
		model.addColumn("Cod. Cuenta");
		model.addColumn("Num. Cuenta");
		model.addColumn("Fec Afiliación");
		model.addColumn("Fec Caducidad");
		model.addColumn("Saldo");

		tblTarjeta.setModel(model);

		cboCodTipoCuenta = new JComboBox();
		cboCodTipoCuenta.addMouseListener(this);
		cboCodTipoCuenta.setBounds(127, 138, 147, 22);
		contentPane.add(cboCodTipoCuenta);

		btnRefresh = new JButton("Refresh");
		btnRefresh.addActionListener(this);
		btnRefresh.setBounds(610, 62, 80, 20);
		contentPane.add(btnRefresh);

		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(554, 160, 107, 29);
		contentPane.add(btnEliminar);

		btnActualizar = new JButton("Actualizar");
		btnActualizar.addActionListener(this);
		btnActualizar.setBounds(440, 163, 104, 29);
		contentPane.add(btnActualizar);

		txtFechaAfiliacion = new JDateChooser();
		txtFechaAfiliacion.setDateFormatString("yyyy-MM-dd");
		txtFechaAfiliacion.setBounds(127, 190, 129, 20);
		contentPane.add(txtFechaAfiliacion);

		cargarDataComboBox();

		mostraDataTarjeta();

		mostrarData(0);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnActualizar) {
			actionPerformedBtnActualizar(e);
		}
		if (e.getSource() == btnRefresh) {
			actionPerformedBtnRefresh(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
		if (e.getSource() == btnAyuda_4) {
			actionPerformedBtnAyuda_4(e);
		}
		if (e.getSource() == btnAyuda_3) {
			actionPerformedBtnAyuda_3(e);
		}
		if (e.getSource() == btnAyuda_2) {
			actionPerformedBtnAyuda_2(e);
		}
		if (e.getSource() == btnAyuda_1) {
			actionPerformedBtnAyuda_1(e);
		}
		if (e.getSource() == btnAyuda) {
			actionPerformedBtnAyuda(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {
		int numTarjeta;
		int codCliente;
		int codCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == 0 || codCuenta == 0 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null || saldo == -1) {
			return;
		} else {

			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);
			t.setSaldo(saldo);

			int res = gTarjeta.registrar(t);

			if (res == 0) {
				mensajeError("Error en el registro");
			} else {
				mensajeExitoso("Registro Exitoso");
			}
		}
	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private double getSaldo() {
		double saldo = -1;
		if (txtSaldo.getText().trim().length() == 0) {
			mensajeError("Por favor ingresa el saldo del Cliente");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		} else if (txtSaldo.getText().trim().matches(Validaciones.MONTO)) {
			saldo = Double.parseDouble(txtSaldo.getText());
		} else {
			mensajeError("Asegurate que el monto ingresado contenga valores númericos dentroe de un rango de 5 digitos");
			txtSaldo.requestFocus();
			txtSaldo.setText("");
			txtSaldo.setBackground(Color.RED);
			saldo = -1;
		}
		return saldo;
	}

	// aún está en prueba
	private String getFechaCaducidad() {
		String fecCaducidad = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecCaducidad = sdf.format(txtFechaCaducidad.getDate());
		return fecCaducidad;
	}

	private String getFechaAfiliacion() {
		String fecAfiliacion = null;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM--dd");
		fecAfiliacion = sdf.format(txtFechaAfiliacion.getDate());
		return fecAfiliacion;

	}

	private int getNumeroCuenta() {
		int numCuenta = -1;
		if (txtNumeroCuenta.getText().trim().length() == 0) {
			mensajeError("Este campo es necesario para poder continuar con la operación");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		} else if (txtNumeroCuenta.getText().trim().matches(Validaciones.NUM_CUENTA)) {
			numCuenta = Integer.parseInt(txtNumeroCuenta.getText());
		} else {
			mensajeError("El número de cuenta no cumple con el formato establecido");
			txtNumeroCuenta.requestFocus();
			txtNumeroCuenta.setBackground(Color.RED);
			numCuenta = -1;
		}
		return numCuenta;
	}

	private int getCodigoTipoCuenta() {
		int codCuenta = 0;
		codCuenta = cboCodTipoCuenta.getSelectedIndex();
		if (codCuenta != 0) {
			codCuenta = cboCodTipoCuenta.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodTipoCuenta.setSelectedIndex(0);
			cboCodTipoCuenta.setBackground(Color.RED);
			codCuenta = 0;
		}
		return codCuenta;
	}

	private int getCodigoCliente() {
		int codCliente = 0;
		codCliente = cboCodigoCliente.getSelectedIndex();
		if (codCliente != 0) {
			codCliente = cboCodigoCliente.getSelectedIndex();
		} else {
			mensajeError("Debes seleccionar el código de un cliente");
			cboCodigoCliente.setSelectedIndex(0);
			cboCodigoCliente.setBackground(Color.RED);
			codCliente = 0;
		}
		return codCliente;
	}

	private int getNumeroTarjeta() {
		int numTarjeta = -1;
		if (txtNumeroTarjeta.getText().trim().length() == 0) {
			mensajeError("El campos es obligatorio, porfavor ingresa el número de tarjeta");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		} else if (txtNumeroTarjeta.getText().trim().matches(Validaciones.NUM_TARJETA)) {
			numTarjeta = Integer.parseInt(txtNumeroTarjeta.getText());
		} else {
			mensajeError("El número de tarjeta no es válido asegurate de que contenga 6 digitos");
			txtNumeroTarjeta.setText("");
			txtNumeroTarjeta.requestFocus();
			txtNumeroTarjeta.setBackground(Color.RED);
			numTarjeta = -1;
		}

		return numTarjeta;
	}

	protected void actionPerformedBtnAyuda(ActionEvent e) {
		lblNumTarjAyuda.setVisible(true);
	}

	protected void actionPerformedBtnAyuda_1(ActionEvent e) {
		lblCodCliAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_2(ActionEvent e) {
		lblCodCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_3(ActionEvent e) {
		lblNumCuentAyuda.setVisible(true);

	}

	protected void actionPerformedBtnAyuda_4(ActionEvent e) {
		lblSaldoAyuda.setVisible(true);

	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtSaldo) {
			keyPressedTxtSaldo(e);
		}
		if (e.getSource() == txtNumeroCuenta) {
			keyPressedTxtNumeroCuenta(e);
		}
		if (e.getSource() == txtNumeroTarjeta) {
			keyPressedTxtNumeroTarjeta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
		if (e.getSource() == tblTarjeta) {
			keyReleasedTblTarjeta(e);
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtNumeroTarjeta(KeyEvent e) {
		lblNumTarjAyuda.setVisible(false);
		txtNumeroTarjeta.setBackground(Color.WHITE);
	}

	protected void keyPressedTxtNumeroCuenta(KeyEvent e) {
		lblNumCuentAyuda.setVisible(false);
		txtNumeroCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtSaldo(KeyEvent e) {
		lblSaldoAyuda.setVisible(false);
		txtSaldo.setBackground(Color.WHITE);
	}

	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCodTipoCuenta) {
			mouseClickedCboCodTipoCuenta(e);
		}
		if (e.getSource() == tblTarjeta) {
			mouseClickedTblTarjeta(e);
		}
		if (e.getSource() == cboCodigoCliente) {
			mouseClickedCboCodigoCliente(e);
		}
	}

	public void mouseEntered(MouseEvent e) {
	}

	public void mouseExited(MouseEvent e) {
	}

	public void mousePressed(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	public void mouseReleased(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodigoCliente(MouseEvent e) {
		cboCodigoCliente.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	protected void mouseClickedCboCodTipoCuenta(MouseEvent e) {
		cboCodTipoCuenta.setBackground(Color.WHITE);
		lblCodCliAyuda.setVisible(false);
	}

	private void cargarDataComboBox() {

		ArrayList<Cliente> listaCliente = gCliente.listarCliente();
		if (listaCliente.size() == 0) {
			mensajeError("Lista cod clientes vacía");
		} else {
			cboCodigoCliente.addItem("Seleccione..");
			for (Cliente cliente : listaCliente) {
				cboCodigoCliente.addItem(cliente.getCod_cliente() + " - " + cliente.getNombre());

			}
		}

		ArrayList<TipoCuenta> listaTipoCuenta = gTipoCuenta.listaTipoCuenta();
		if (listaTipoCuenta.size() == 0) {
			mensajeError("lista tipo cuenta vacía");
		} else {
			cboCodTipoCuenta.addItem("Seleccione..");
			for (TipoCuenta tipoCuenta : listaTipoCuenta) {
				cboCodTipoCuenta.addItem(tipoCuenta.getCod_cuenta() + " - " + tipoCuenta.getDescripcion());
			}
		}

	}


	private void mostraDataTarjeta() {

		model.setRowCount(0);
		ArrayList<Tarjeta> data = gTarjeta.listartarjeta();
		for (Tarjeta t : data) {
			Object fila[] = { t.getNum_Tarjeta(), t.getCod_cliente(), t.getCod_cuenta(), t.getNum_cuenta(),
					t.getFecAfliacion(), t.getFecCaducidad(), t.getSaldo() };
			model.addRow(fila);
		}

	}

	private void mostrarData(int posFila) {
		String numTarjeta, codCliente, codTipoCuenta, numCuenta, fechaAfiliacion, fechaCaducidad, saldo;

		numTarjeta = tblTarjeta.getValueAt(posFila, 0).toString();
		codCliente = tblTarjeta.getValueAt(posFila, 1).toString();
		codTipoCuenta = tblTarjeta.getValueAt(posFila, 2).toString();
		numCuenta = tblTarjeta.getValueAt(posFila, 3).toString();
		fechaAfiliacion = tblTarjeta.getValueAt(posFila, 4).toString();
		fechaCaducidad = tblTarjeta.getValueAt(posFila, 5).toString();
		saldo = tblTarjeta.getValueAt(posFila, 6).toString();

		txtNumeroTarjeta.setText(numTarjeta);
		cboCodigoCliente.setSelectedIndex(posFila); if (posFila == 0) {
		(posFila+1);
		}else if(posFila == );
		cboCodTipoCuenta.setSelectedIndex(posFila);
		txtNumeroCuenta.setText(numCuenta);
		try {
			txtFechaAfiliacion.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaAfiliacion));
		} catch (ParseException e1) {
			e1.printStackTrace();
		}
		try {
			txtFechaCaducidad.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(fechaCaducidad));
		} catch (ParseException e) {
			e.printStackTrace();
		}
		txtSaldo.setText(saldo);

	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
		txtNumeroTarjeta.setText("");
		cboCodigoCliente.setSelectedIndex(0);
		cboCodTipoCuenta.setSelectedIndex(0);
		txtNumeroCuenta.setText("");
		txtSaldo.setText("");
		txtNumeroTarjeta.requestFocus();
		txtFechaAfiliacion.setDate(new Date());
		txtFechaCaducidad.setDate(null);
	}

	protected void actionPerformedBtnRefresh(ActionEvent e) {
//		cargarDataComboBox();
		mostraDataTarjeta();
		mostrarData(0);
	}

	protected void actionPerformedBtnActualizar(ActionEvent e) {
		ocultar();
		actualizarTarjeta();
	}

	private void actualizarTarjeta() {
		int numTarjeta;
		int codCliente;
		int codTipoCuenta;
		int numCuenta;
		String fecAfiliacion;
		String fecCaducidad;
		double saldo;

		numTarjeta = getNumeroTarjeta();
		codCliente = getCodigoCliente();
		codTipoCuenta = getCodigoTipoCuenta();
		numCuenta = getNumeroCuenta();
		fecAfiliacion = getFechaAfiliacion();
		fecCaducidad = getFechaCaducidad();
		saldo = getSaldo();

		if (numTarjeta == -1 || codCliente == -1 || codTipoCuenta == -1 || numCuenta == -1 || fecAfiliacion == null
				|| fecCaducidad == null) {
			return;
		} else {
			Tarjeta t = new Tarjeta();

			t.setNum_Tarjeta(numTarjeta);
			t.setCod_cliente(codCliente);
			t.setCod_cuenta(codTipoCuenta);
			t.setNum_cuenta(numCuenta);
			t.setFecAfliacion(fecAfiliacion);
			t.setFecCaducidad(fecCaducidad);

			int ok = gTarjeta.actualizar(t);
			if (ok == 0) {
				mensajeError("Error en la actualización");
			} else {
				mensajeExitoso("Tarjetta Actualizada exitosamente");
			}

		}

	}

	protected void actionPerformedBtnEliminar(ActionEvent e) {
		eliminarTarjeta();
	}

	private void eliminarTarjeta() {
		int numTarjeta;
		int opcion;

		numTarjeta = getNumeroCuenta();

		if (numTarjeta == -1) {
			return;
		} else {
			opcion = JOptionPane.showConfirmDialog(this, "Desea eliminar la tarjeta ?", "Sistema",
					JOptionPane.YES_NO_OPTION);
			if (opcion == 0) {
				int ok = gTarjeta.eliminar(numTarjeta);
				if (ok == 0) {
					mensajeError("El Número de tarjeta ingresado no existe");
				} else {
					mensajeExitoso("La tarjeta fue elimanada con éxito");
				}
			}

		}

	}

	protected void mouseClickedTblTarjeta(MouseEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);

	}

	protected void keyReleasedTblTarjeta(KeyEvent e) {
		int posFila = tblTarjeta.getSelectedRow();

		mostrarData(posFila);
	}

	private void ocultar() {
		btnAyuda_1.setVisible(true);
		btnAyuda_2.setVisible(true);
		cboCodigoCliente.setVisible(true);
		cboCodTipoCuenta.setVisible(true);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui 4 0 2022-06-13 17:45:28.126
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 17:46:31.276
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 17:46:31.279
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:22:32.580
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.MultiPagesMode.switchSourceDesign(MultiPagesMode.java:67)
	at org.eclipse.wb.internal.core.editor.actions.SwitchAction.run(SwitchAction.java:31)
	at org.eclipse.wb.internal.core.editor.actions.EditorRelatedAction.run(EditorRelatedAction.java:56)
	at org.eclipse.ui.internal.handlers.ActionDelegateHandlerProxy.execute(ActionDelegateHandlerProxy.java:288)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1114)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1110)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1795)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:5155)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:406)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4778)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5015)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:22:32.625
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.MultiPagesMode.switchSourceDesign(MultiPagesMode.java:67)
	at org.eclipse.wb.internal.core.editor.actions.SwitchAction.run(SwitchAction.java:31)
	at org.eclipse.wb.internal.core.editor.actions.EditorRelatedAction.run(EditorRelatedAction.java:56)
	at org.eclipse.ui.internal.handlers.ActionDelegateHandlerProxy.execute(ActionDelegateHandlerProxy.java:288)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1062)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1114)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1110)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1795)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:5155)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:406)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4778)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5015)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:40:49.630
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:40:49.666
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:42:24.234
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:42:24.417
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:46:26.361
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:46:26.406
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:50:53.997
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:50:54.143
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.190
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.212
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.234
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.237
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.241
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.243
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.246
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.249
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.253
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.258
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.262
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.264
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.269
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.271
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.274
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.277
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.280
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.282
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.285
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.288
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.291
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.294
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.296
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.299
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.304
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.310
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.317
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.321
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.324
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.328
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.330
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.334
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.337
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.340
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.342
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.346
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.348
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.352
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:51:41.357
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:539)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils$7.runObject(SwingImageUtils.java:1)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$4.run(SwingUtils.java:119)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.invokeLaterAndWait(SwingUtils.java:180)
	at org.eclipse.wb.internal.swing.utils.SwingUtils.runObjectLaterAndWait(SwingUtils.java:116)
	at org.eclipse.wb.internal.swing.utils.SwingImageUtils.convertImage_AWT_to_SWT(SwingImageUtils.java:529)
	at org.eclipse.wb.internal.swing.utils.SwingScreenshotMaker.makeShots(SwingScreenshotMaker.java:168)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:155)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.refresh_fetch(ComponentInfo.java:140)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.refresh_fetch(ContainerInfo.java:250)
	at org.eclipse.wb.core.model.ObjectInfo$6$1.run(ObjectInfo.java:511)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:146)
	at org.eclipse.wb.core.model.ObjectInfo$6.run(ObjectInfo.java:508)
	at org.eclipse.wb.internal.swing.utils.SwingUtils$2.run(SwingUtils.java:76)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:318)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:773)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:720)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:714)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:56:02.936
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 18:56:03.037
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:11:19.329
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:11:19.381
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:14:10.162
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:14:10.264
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:14:10.289
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:14:10.316
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:43:56.488
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:43:56.615
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.ImageUtils.lambda$0(ImageUtils.java:61)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runObject(ExecutionUtils.java:252)
	at org.eclipse.wb.internal.core.utils.ui.ImageUtils.convertToSWT(ImageUtils.java:57)
	at org.eclipse.wb.internal.swing.DescriptionProcessor.configureIconFromBeanInfo(DescriptionProcessor.java:59)
	at org.eclipse.wb.internal.swing.DescriptionProcessor.process(DescriptionProcessor.java:46)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentDescriptionHelper.getDescription0(ComponentDescriptionHelper.java:437)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentDescriptionHelper.getDescription0(ComponentDescriptionHelper.java:289)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentDescriptionHelper.getDescription(ComponentDescriptionHelper.java:258)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:205)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:43:56.631
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:58:33.881
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:498)
	at org.eclipse.wb.internal.core.utils.ui.UiUtils.getCopy(UiUtils.java:475)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.createPresentation(ComponentPresentationHelper.java:230)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getSlowPresentation(ComponentPresentationHelper.java:208)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:120)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-06-13 19:58:33.896
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:605)
	at org.eclipse.wb.internal.core.model.description.helpers.DescriptionHelper.getIconImage(DescriptionHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getComponentImage(ComponentPresentationHelper.java:166)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getFastPresentation(ComponentPresentationHelper.java:139)
	at org.eclipse.wb.internal.core.model.description.helpers.ComponentPresentationHelper.getPresentation(ComponentPresentationHelper.java:114)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.preparePresentation(ComponentEntryInfo.java:259)
	at org.eclipse.wb.core.editor.palette.model.entry.ComponentEntryInfo.initialize(ComponentEntryInfo.java:219)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.getVisualEntry(DesignerPalette.java:257)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette$4.getEntries(DesignerPalette.java:332)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$CategoryFigure.<init>(PaletteComposite.java:375)
	at org.eclipse.wb.core.controls.palette.PaletteComposite$PaletteFigure.refresh(PaletteComposite.java:291)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.refreshPalette(PaletteComposite.java:207)
	at org.eclipse.wb.core.controls.palette.PaletteComposite.setPalette(PaletteComposite.java:200)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.showPalette(DesignerPalette.java:437)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.reloadPalette(DesignerPalette.java:172)
	at org.eclipse.wb.internal.core.editor.palette.DesignerPalette.setInput(DesignerPalette.java:138)
	at org.eclipse.wb.internal.core.editor.JavaDesignComposite.refresh(JavaDesignComposite.java:147)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:604)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:468)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:464)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:470)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:484)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:432)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:389)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:275)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:252)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:127)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1087)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1072)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:775)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3248)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1882)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:331)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1063)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
