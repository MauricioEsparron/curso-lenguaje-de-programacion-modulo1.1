package vista;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import entidad.TipoCuenta;
import mantenimiento.GestionTipoCuentaDAO;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.awt.Color;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;

public class FrmrRegistroTipoCuenta extends JFrame implements ActionListener, KeyListener {

	private JPanel contentPane;
	private JLabel lblNewLabel;
	private JLabel lblCodigoTipoCuenta;
	private JLabel lblDescripcionTipoCuenta;
	private JTextField txtCodigoTipoCuenta;
	private JTextField txtDescripcionTipoCuenta;
	private JButton btnNuevo;
	private JButton btnGuardar;
	private JButton btnReporte;
	private final JTable tblTipoCuenta = new JTable();
	private JScrollPane scrollPane;

	DefaultTableModel model = new DefaultTableModel();
	GestionTipoCuentaDAO gTipoCuenta = new GestionTipoCuentaDAO();

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FrmrRegistroTipoCuenta frame = new FrmrRegistroTipoCuenta();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FrmrRegistroTipoCuenta() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 376);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		lblNewLabel = new JLabel("Registro Tipo Cuenta");
		lblNewLabel.setForeground(new Color(255, 255, 240));
		lblNewLabel.setBackground(new Color(143, 188, 143));
		lblNewLabel.setOpaque(true);
		lblNewLabel.setFont(new Font("Yu Gothic UI", Font.BOLD, 23));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(0, 0, 434, 55);
		contentPane.add(lblNewLabel);

		lblCodigoTipoCuenta = new JLabel("Cod. tipo Cuenta :");
		lblCodigoTipoCuenta.setBounds(10, 82, 106, 14);
		contentPane.add(lblCodigoTipoCuenta);

		lblDescripcionTipoCuenta = new JLabel("Descripción :");
		lblDescripcionTipoCuenta.setBounds(10, 118, 106, 14);
		contentPane.add(lblDescripcionTipoCuenta);

		txtCodigoTipoCuenta = new JTextField();
		txtCodigoTipoCuenta.addKeyListener(this);
		txtCodigoTipoCuenta.setBounds(137, 79, 106, 20);
		contentPane.add(txtCodigoTipoCuenta);
		txtCodigoTipoCuenta.setColumns(10);

		txtDescripcionTipoCuenta = new JTextField();
		txtDescripcionTipoCuenta.addKeyListener(this);
		txtDescripcionTipoCuenta.setBounds(137, 115, 106, 20);
		contentPane.add(txtDescripcionTipoCuenta);
		txtDescripcionTipoCuenta.setColumns(10);

		btnNuevo = new JButton("Nuevo");
		btnNuevo.addActionListener(this);
		btnNuevo.setBounds(274, 78, 89, 23);
		contentPane.add(btnNuevo);

		btnGuardar = new JButton("Guardar");
		btnGuardar.addActionListener(this);
		btnGuardar.setBounds(274, 114, 89, 23);
		contentPane.add(btnGuardar);

		btnReporte = new JButton("Reporte");
		btnReporte.addActionListener(this);
		btnReporte.setBounds(274, 148, 89, 23);
		contentPane.add(btnReporte);

		scrollPane = new JScrollPane();
		scrollPane.setBounds(0, 189, 333, 148);
		contentPane.add(scrollPane);
		tblTipoCuenta.setFillsViewportHeight(true);
		scrollPane.setViewportView(tblTipoCuenta);

		model.addColumn("Código");
		model.addColumn("Descripción");

		tblTipoCuenta.setModel(model);

	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnReporte) {
			actionPerformedBtnReporte(e);
		}
		if (e.getSource() == btnGuardar) {
			actionPerformedBtnGuardar(e);
		}
		if (e.getSource() == btnNuevo) {
			actionPerformedBtnNuevo(e);
		}
	}

	protected void actionPerformedBtnNuevo(ActionEvent e) {
	}

	protected void actionPerformedBtnGuardar(ActionEvent e) {
		registrar();
	}

	private void registrar() {

		int codigoTipoCuenta;
		String descripcion;

		codigoTipoCuenta = getCodigoTipoCuenta();
		descripcion = getDescripcion();

		if (codigoTipoCuenta == -1 || descripcion == null) {
			return;
		}

		TipoCuenta tc = new TipoCuenta();

		tc.setCod_cuenta(codigoTipoCuenta);
		tc.setDescripcion(descripcion);

		int res = gTipoCuenta.registrar(tc);

		if (res == 0) {
			mensajeError("Error en el registro");
		} else {
			mensajeExitoso("Registro Exitoso");
		}

	}

	private void mensajeExitoso(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Sistema", 1);
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error !!!", 0);

	}

	private int getCodigoTipoCuenta() {
		int codTipocuenta = -1;
		if (txtCodigoTipoCuenta.getText().trim().length() == 0) {
			mensajeError("Debes ingresar el código para poder continuar");
			txtCodigoTipoCuenta.requestFocus();
			txtCodigoTipoCuenta.setBackground(Color.RED);
			codTipocuenta = -1;
		} else if (txtCodigoTipoCuenta.getText().trim().matches("\\d")) {
			codTipocuenta = Integer.parseInt(txtCodigoTipoCuenta.getText());
		} else {
			mensajeError("El código ingresado no cumple con el formato permitido");
			txtCodigoTipoCuenta.requestFocus();
			txtCodigoTipoCuenta.setText("");
			txtCodigoTipoCuenta.setBackground(Color.RED);
			codTipocuenta = -1;
		}
		return codTipocuenta;
	}

	private String getDescripcion() {
		String desc = null;
		if (txtDescripcionTipoCuenta.getText().trim().length() == 0) {
			mensajeError("Debes ingresar una descripción");
			txtDescripcionTipoCuenta.requestFocus();
			txtDescripcionTipoCuenta.setBackground(Color.RED);
			desc = null;
		} else if (txtDescripcionTipoCuenta.getText().trim().matches("\\D")) {
			desc = txtDescripcionTipoCuenta.getText();
		} else {
			mensajeError("la descripción ingresada no cumple con el formato permitido");
			txtDescripcionTipoCuenta.requestFocus();
			txtDescripcionTipoCuenta.setText("");
			txtDescripcionTipoCuenta.setBackground(Color.RED);
			desc = null;
		}
		return desc;

	}

	protected void actionPerformedBtnReporte(ActionEvent e) {
	}

	public void keyPressed(KeyEvent e) {
		if (e.getSource() == txtDescripcionTipoCuenta) {
			keyPressedTxtDescripcionTipoCuenta(e);
		}
		if (e.getSource() == txtCodigoTipoCuenta) {
			keyPressedTxtCodigoTipoCuenta(e);
		}
	}

	public void keyReleased(KeyEvent e) {
	}

	public void keyTyped(KeyEvent e) {
	}

	protected void keyPressedTxtCodigoTipoCuenta(KeyEvent e) {
		txtCodigoTipoCuenta.setBackground(Color.WHITE);

	}

	protected void keyPressedTxtDescripcionTipoCuenta(KeyEvent e) {
		txtDescripcionTipoCuenta.setBackground(Color.WHITE);
	}
}
